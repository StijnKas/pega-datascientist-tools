{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ADM Health Check\n",
    "\n",
    "__Pega__\n",
    "\n",
    "__2023-05-10__\n",
    "\n",
    "Pdstools version 3 brought over the Health Check from the R tools to Python. Along with this change, we made it easier to run by providing an easy to use webapp. The Health Check provides a global overview of Adaptive models and predictors using Pega Machine Learning."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Downloading the Required Libraries\n",
    "\n",
    "To get started, you need Python with version 3.8 or greater and [pip](https://pypi.org/project/pip/) installed in your system. You can check which python version you have by running this in your command line:\n",
    "\n",
    "```\n",
    "python --version\n",
    "```\n",
    "![python version check](../../../../images/python_version.png)\n",
    "\n",
    "It's also best practice to regularly update your version of pip. If you get any errors during installation, first try:\n",
    "```\n",
    "pip install --upgrade pip\n",
    "```\n",
    "\n",
    "Now, you can proceed to download pdstools and other libraries required to run Health Check app. Simply run:\n",
    "\n",
    "```\n",
    "pip install pdstools['app']\n",
    "```\n",
    "\n",
    "This will install pdstools, along with all required _optional dependencies_ we use in the webapp.\n",
    "\n",
    "Once you've got pdstools and other necessary packages installed, run `pip show` to verify the install.\n",
    "\n",
    "![pdstools version](../../../../images/pdstools_version.png)\n",
    "\n",
    "If your pdstools version is below 3.1, you can upgrade it with this command:\n",
    "```\n",
    "pip install --upgrade pdstools\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Running the App\n",
    "To launch the Health Check application, simply enter “pdstools run” in your system’s command line. \n",
    "\n",
    "```\n",
    "pdstools run\n",
    "```\n",
    "![run](../../../../images/run.png)\n",
    "\n",
    "Upon executing this command, the app should open up in your system browser. If the app does not open up automatically, simply copy the Local URL from your terminal and paste it into your browser.\n"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "## Using the App: A Step-by-Step Guide\n",
    "\n",
    "### 1. Introduction\n",
    "- The browser opens up with the Home page, from the left hand side, simply click on Health Check Check to get started with the HealthCheck app.\n",
    "\n",
    "![introduction](../../../../images/introduction.png)\n",
    "\n",
    "- Please read the introduction page to learn more about the correct usage of the app, then you can move to Data Import tab to upload your data.\n",
    "\n",
    "![data_import](../../../../images/data_import.png)\n",
    "\n",
    "### 2. Data import\n",
    "- You can upload your ADMDatamart data in this tab. \n",
    "\n",
    "For testing the app, you may use the provided sample data from CDH Sample. For instructions on how to export your own datamart data, [please refer to this article](https://github.com/pegasystems/pega-datascientist-tools/wiki/How-to-export-and-use-the-ADM-Datamart)\n",
    "\n",
    "If you're using Treatments, make sure to add that to the context keys in the *Configure Advanced Options* section by clicking on *Extract Additional Keys*.\n",
    "Additionally, if you are not using all the default context keys(Channel, Direction, Issue, and Group), feel free to remove the ones you won't be using.\n",
    "\n",
    "- Next, you can select your import method from the dropdown menu under Data Import. You will see 4 options:\n",
    "    - **Direct file path:** Simply paste the folder path where the ADM files are located. *Ex. /User/Downloads/*. pdstools should automatically find the relevant files in that directory. *Note*: there is no need to extract the zip files, we will also take care of that for you.\n",
    "    - **Direct file upload:** Browse your local files with this option. If you don't have access Predictor Binning files, you can upload only the Model Snapshot file and then click on the checkbox to confirm that you want to run only model-based Health Check.\n",
    "    - **CDH Sample:** You can generate a sample HealthCheck with this option. It is a convenient way to test out the Health Check using a CDH Sample dataset.\n",
    "    - **Download from S3:** This feature is not implemented yet but soon, you will be able to run HealthCheck without downloading the files to your local system if they are located in S3.\n",
    "\n",
    "### 3. Data filters\n",
    "After the data is imported into the app you can easily add custom filters to specify the Health Check to your needs.\n",
    "For just analyzing models in the Web channel, select \"Channel\" from dropdown, delete other channels (if any), move to next tab.\n",
    "\n",
    "![data_filters](../../../../images/data_filters.png)\n",
    "\n",
    "### 4. Report configuration\n",
    "In this tab you can configure some options for the outputs and then generate your Health Check document. The options are:\n",
    "\n",
    "- **Customer name:** Change the name of the Health Check file that will generated\n",
    "- **Select output type:** Change output format under this field\n",
    "- **Change working directory:** You can change folder name where the temporary files will be stored while running the code. Please choose a directory where Python has read and write access.\n",
    "\n",
    "Check Boxes:\n",
    "\n",
    "- **Remove temporary files:** Chose whether you want to keep temporary files or not. *Note:* If you get an error while the Health Check is being generated, you can deselect this checkbox and share the log which should be created under the directory you named in *Change working directory* section\n",
    "- **Include tables in document:** Whether to include the overview tables embedded in the document itself or to separately recieve these in a tabbed Excel file. If you have a large datamart file, it may be worth _unchecking_ this, as the final health check will be smaller and faster.\n",
    "\n",
    "Finally, you can click on the **Generate Health Check** button. Once the process is complete, a **Download Health Check** button will appear. You can download Health Check by clicking on it.\n",
    "\n",
    "## Troubleshooting\n",
    "\n",
    "In case you run into any issues, please [file an issue on GitHub](https://github.com/pegasystems/pega-datascientist-tools/issues) to let us know, and we'll get it fixed as soon as possible!\n",
    "\n",
    "## Contributing\n",
    "\n",
    "If you'd like to see more or different information in the Health Check - we'd appreciate any contributions, [preferably in the form of a pull request](https://github.com/pegasystems/pega-datascientist-tools/pulls). If you're not comfortable in Python or want to discuss the value of your proposed solution, also feel free to [open a feature request](https://github.com/pegasystems/pega-datascientist-tools/issues)."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "playground",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.0"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
