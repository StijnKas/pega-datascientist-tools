<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="5638pt" height="277pt" viewBox="0.00 0.00 5638.00 277.00">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 273)">
<title>polars_query</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-273 5634,-273 5634,4 -4,4"/>
<!-- p1 -->
<g id="node1" class="node">
<title>p1</title>
<polygon fill="none" stroke="black" points="5630,-269 0,-269 0,-233 5630,-233 5630,-269"/>
<text text-anchor="middle" x="2815" y="-247.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [when([(col(&quot;__POLARS_CSER_0x2b7e054899f29b02&quot;).is_not_nan()) | (col(&quot;__POLARS_CSER_0x2b7e054899f29b02&quot;).is_null())]).then(col(&quot;__POLARS_CSER_0x2b7e054899f29b02&quot;)).otherwise(0.0).alias(&quot;SuccessRate&quot;), when([(col(&quot;Positives&quot;).min()) == (col(&quot;Positives&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;Positives&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_Positives&quot;), when([(col(&quot;ResponseCount&quot;).min()) == (col(&quot;ResponseCount&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;ResponseCount&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_ResponseCount&quot;), [(col(&quot;Positives&quot;)) / (col(&quot;ResponseCount&quot;))].alias(&quot;__POLARS_CSER_0x2b7e054899f29b02&quot;)]</text>
</g>
<!-- p2 -->
<g id="node2" class="node">
<title>p2</title>
<polygon fill="none" stroke="black" points="5220,-197 410,-197 410,-161 5220,-161 5220,-197"/>
<text text-anchor="middle" x="2815" y="-175.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;Issue&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Direction&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;Configuration&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Group&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;Channel&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;)]</text>
</g>
<!-- p1&#45;&#45;p2 -->
<g id="edge1" class="edge">
<title>p1--p2</title>
<path fill="none" stroke="black" d="M2815,-232.7C2815,-221.85 2815,-207.92 2815,-197.1"/>
</g>
<!-- p3 -->
<g id="node3" class="node">
<title>p3</title>
<polygon fill="none" stroke="black" points="2857,-125 2773,-125 2773,-89 2857,-89 2857,-125"/>
<text text-anchor="middle" x="2815" y="-103.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p2&#45;&#45;p3 -->
<g id="edge2" class="edge">
<title>p2--p3</title>
<path fill="none" stroke="black" d="M2815,-160.7C2815,-149.85 2815,-135.92 2815,-125.1"/>
</g>
<!-- p4 -->
<g id="node4" class="node">
<title>p4</title>
<polygon fill="none" stroke="black" points="2852.5,-53 2777.5,-53 2777.5,0 2852.5,0 2852.5,-53"/>
<text text-anchor="middle" x="2815" y="-37.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="2815" y="-22.8" font-family="Times,serif" font-size="14.00">π 12/27;</text>
<text text-anchor="middle" x="2815" y="-7.8" font-family="Times,serif" font-size="14.00">σ None</text>
</g>
<!-- p3&#45;&#45;p4 -->
<g id="edge3" class="edge">
<title>p3--p4</title>
<path fill="none" stroke="black" d="M2815,-88.97C2815,-78.51 2815,-64.9 2815,-53.16"/>
</g>
</g>
</svg>