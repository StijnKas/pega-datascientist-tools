<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="11292pt" height="1128pt" viewBox="0.00 0.00 11291.50 1128.00">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1124)">
<title>polars_query</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1124 11287.5,-1124 11287.5,4 -4,4"/>
<!-- p1 -->
<g id="node1" class="node">
<title>p1</title>
<polygon fill="none" stroke="black" points="5545.5,-1120 5369.5,-1120 5369.5,-1067 5545.5,-1067 5545.5,-1120"/>
<text text-anchor="middle" x="5457.5" y="-1104.8" font-family="Times,serif" font-size="14.00">JOIN INNER</text>
<text text-anchor="middle" x="5457.5" y="-1089.8" font-family="Times,serif" font-size="14.00">left: [col(&quot;ModelID&quot;)];</text>
<text text-anchor="middle" x="5457.5" y="-1074.8" font-family="Times,serif" font-size="14.00">right: [col(&quot;ModelID&quot;)]</text>
</g>
<!-- p2 -->
<g id="node2" class="node">
<title>p2</title>
<polygon fill="none" stroke="black" points="5616,-950.5 4773,-950.5 4773,-914.5 5616,-914.5 5616,-950.5"/>
<text text-anchor="middle" x="5194.5" y="-928.8" font-family="Times,serif" font-size="14.00">FILTER BY [(col(&quot;SnapshotTime&quot;).fill_null_with_strategy()) == (col(&quot;SnapshotTime&quot;).fill_null_with_strategy().max())]</text>
</g>
<!-- p1&#45;&#45;p2 -->
<g id="edge1" class="edge">
<title>p1--p2</title>
<path fill="none" stroke="black" d="M5369.23,-1074.97C5336.23,-1065.57 5299.71,-1051.55 5270.5,-1031 5240.14,-1009.63 5216.1,-972.62 5203.71,-950.86"/>
</g>
<!-- p12 -->
<g id="node13" class="node">
<title>p12</title>
<polygon fill="none" stroke="black" points="6123,-1031 5280,-1031 5280,-995 6123,-995 6123,-1031"/>
<text text-anchor="middle" x="5701.5" y="-1009.3" font-family="Times,serif" font-size="14.00">FILTER BY [(col(&quot;SnapshotTime&quot;).fill_null_with_strategy()) == (col(&quot;SnapshotTime&quot;).fill_null_with_strategy().max())]</text>
</g>
<!-- p1&#45;&#45;p12 -->
<g id="edge12" class="edge">
<title>p1--p12</title>
<path fill="none" stroke="black" d="M5537.06,-1066.9C5573.63,-1055.14 5616.02,-1041.5 5648.6,-1031.02"/>
</g>
<!-- c0 -->
<g id="node3" class="node">
<title>c0</title>
<polygon fill="none" stroke="black" points="5260.5,-722 5128.5,-722 5128.5,-686 5260.5,-686 5260.5,-722"/>
<text text-anchor="middle" x="5194.5" y="-700.3" font-family="Times,serif" font-size="14.00">CACHE: 1 times</text>
</g>
<!-- p2&#45;&#45;c0 -->
<g id="edge2" class="edge">
<title>p2--c0</title>
<path fill="none" stroke="black" d="M5194.5,-914.48C5194.5,-872.5 5194.5,-764.4 5194.5,-722.22"/>
</g>
<!-- p3 -->
<g id="node4" class="node">
<title>p3</title>
<polygon fill="none" stroke="black" points="5379.5,-650 5009.5,-650 5009.5,-612 5379.5,-612 5379.5,-650"/>
<text text-anchor="middle" x="5194.5" y="-634.8" font-family="Times,serif" font-size="14.00">simple π 15/15</text>
<text text-anchor="middle" x="5194.5" y="-619.8" font-family="Times,serif" font-size="14.00">[&quot;ResponseCount&quot;, &quot;Group&quot;, ... 13 other columns]</text>
</g>
<!-- c0&#45;&#45;p3 -->
<g id="edge3" class="edge">
<title>c0--p3</title>
<path fill="none" stroke="black" d="M5194.5,-685.81C5194.5,-674.98 5194.5,-661.01 5194.5,-650.02"/>
</g>
<!-- p22 -->
<g id="node23" class="node">
<title>p22</title>
<polygon fill="none" stroke="black" points="4161.5,-650 3791.5,-650 3791.5,-612 4161.5,-612 4161.5,-650"/>
<text text-anchor="middle" x="3976.5" y="-634.8" font-family="Times,serif" font-size="14.00">simple π 15/15</text>
<text text-anchor="middle" x="3976.5" y="-619.8" font-family="Times,serif" font-size="14.00">[&quot;ResponseCount&quot;, &quot;Group&quot;, ... 13 other columns]</text>
</g>
<!-- c0&#45;&#45;p22 -->
<g id="edge23" class="edge">
<title>c0--p22</title>
<path fill="none" stroke="black" d="M5128.15,-699.13C4946.89,-688.57 4438.47,-658.93 4161.69,-642.8"/>
</g>
<!-- p4 -->
<g id="node5" class="node">
<title>p4</title>
<polygon fill="none" stroke="black" points="6832.5,-576 6454.5,-576 6454.5,-540 6832.5,-540 6832.5,-576"/>
<text text-anchor="middle" x="6643.5" y="-554.3" font-family="Times,serif" font-size="14.00">FILTER BY col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p3&#45;&#45;p4 -->
<g id="edge4" class="edge">
<title>p3--p4</title>
<path fill="none" stroke="black" d="M5379.57,-612.62C5382.57,-612.41 5385.55,-612.2 5388.5,-612 5766.14,-586.52 6208.58,-571.23 6454.38,-564.02"/>
</g>
<!-- p5 -->
<g id="node6" class="node">
<title>p5</title>
<polygon fill="none" stroke="black" points="7243.5,-496.5 6873.5,-496.5 6873.5,-458.5 7243.5,-458.5 7243.5,-496.5"/>
<text text-anchor="middle" x="7058.5" y="-481.3" font-family="Times,serif" font-size="14.00">simple π 15/16</text>
<text text-anchor="middle" x="7058.5" y="-466.3" font-family="Times,serif" font-size="14.00">[&quot;ResponseCount&quot;, &quot;Group&quot;, ... 13 other columns]</text>
</g>
<!-- p4&#45;&#45;p5 -->
<g id="edge5" class="edge">
<title>p4--p5</title>
<path fill="none" stroke="black" d="M6733.55,-539.97C6801.37,-527.14 6894.15,-509.59 6963.22,-496.52"/>
</g>
<!-- p6 -->
<g id="node7" class="node">
<title>p6</title>
<polygon fill="none" stroke="black" points="9960,-415 4989,-415 4989,-379 9960,-379 9960,-415"/>
<text text-anchor="middle" x="7474.5" y="-393.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [when([(col(&quot;__POLARS_CSER_0xa1a67808544c6492&quot;).is_not_nan()) | (col(&quot;__POLARS_CSER_0xa1a67808544c6492&quot;).is_null())]).then(col(&quot;__POLARS_CSER_0xa1a67808544c6492&quot;)).otherwise(0.0).alias(&quot;SuccessRate&quot;), when([(col(&quot;Positives&quot;).min()) == (col(&quot;Positives&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;Positives&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_Positives&quot;), when([(col(&quot;ResponseCount&quot;).min()) == (col(&quot;ResponseCount&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;ResponseCount&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_ResponseCount&quot;)]</text>
</g>
<!-- p5&#45;&#45;p6 -->
<g id="edge6" class="edge">
<title>p5--p6</title>
<path fill="none" stroke="black" d="M7153.94,-458.49C7223.14,-445.43 7316.14,-427.88 7384.14,-415.05"/>
</g>
<!-- p7 -->
<g id="node8" class="node">
<title>p7</title>
<polygon fill="none" stroke="black" points="7880,-343 7069,-343 7069,-307 7880,-307 7880,-343"/>
<text text-anchor="middle" x="7474.5" y="-321.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;Positives&quot;)) / (col(&quot;ResponseCount&quot;))].alias(&quot;__POLARS_CSER_0xa1a67808544c6492&quot;)]</text>
</g>
<!-- p6&#45;&#45;p7 -->
<g id="edge7" class="edge">
<title>p6--p7</title>
<path fill="none" stroke="black" d="M7474.5,-378.7C7474.5,-367.85 7474.5,-353.92 7474.5,-343.1"/>
</g>
<!-- p8 -->
<g id="node9" class="node">
<title>p8</title>
<polygon fill="none" stroke="black" points="9879.5,-271 5069.5,-271 5069.5,-235 9879.5,-235 9879.5,-271"/>
<text text-anchor="middle" x="7474.5" y="-249.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;Group&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Direction&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;Issue&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;), col(&quot;Configuration&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Channel&quot;).strict_cast(Categorical(None, Physical))]</text>
</g>
<!-- p7&#45;&#45;p8 -->
<g id="edge8" class="edge">
<title>p7--p8</title>
<path fill="none" stroke="black" d="M7474.5,-306.7C7474.5,-295.85 7474.5,-281.92 7474.5,-271.1"/>
</g>
<!-- p9 -->
<g id="node10" class="node">
<title>p9</title>
<polygon fill="none" stroke="black" points="7659.5,-199 7289.5,-199 7289.5,-161 7659.5,-161 7659.5,-199"/>
<text text-anchor="middle" x="7474.5" y="-183.8" font-family="Times,serif" font-size="14.00">simple π 12/12</text>
<text text-anchor="middle" x="7474.5" y="-168.8" font-family="Times,serif" font-size="14.00">[&quot;ResponseCount&quot;, &quot;Group&quot;, ... 10 other columns]</text>
</g>
<!-- p8&#45;&#45;p9 -->
<g id="edge9" class="edge">
<title>p8--p9</title>
<path fill="none" stroke="black" d="M7474.5,-234.81C7474.5,-223.98 7474.5,-210.01 7474.5,-199.02"/>
</g>
<!-- p10 -->
<g id="node11" class="node">
<title>p10</title>
<polygon fill="none" stroke="black" points="7516.5,-125 7432.5,-125 7432.5,-89 7516.5,-89 7516.5,-125"/>
<text text-anchor="middle" x="7474.5" y="-103.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p9&#45;&#45;p10 -->
<g id="edge10" class="edge">
<title>p9--p10</title>
<path fill="none" stroke="black" d="M7474.5,-160.72C7474.5,-149.7 7474.5,-135.78 7474.5,-125"/>
</g>
<!-- p11 -->
<g id="node12" class="node">
<title>p11</title>
<polygon fill="none" stroke="black" points="7630,-53 7319,-53 7319,0 7630,0 7630,-53"/>
<text text-anchor="middle" x="7474.5" y="-37.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="7474.5" y="-22.8" font-family="Times,serif" font-size="14.00">π 12/27;</text>
<text text-anchor="middle" x="7474.5" y="-7.8" font-family="Times,serif" font-size="14.00">σ col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p10&#45;&#45;p11 -->
<g id="edge11" class="edge">
<title>p10--p11</title>
<path fill="none" stroke="black" d="M7474.5,-88.97C7474.5,-78.51 7474.5,-64.9 7474.5,-53.16"/>
</g>
<!-- p13 -->
<g id="node14" class="node">
<title>p13</title>
<polygon fill="none" stroke="black" points="5809.5,-959 5633.5,-959 5633.5,-906 5809.5,-906 5809.5,-959"/>
<text text-anchor="middle" x="5721.5" y="-943.8" font-family="Times,serif" font-size="14.00">JOIN INNER</text>
<text text-anchor="middle" x="5721.5" y="-928.8" font-family="Times,serif" font-size="14.00">left: [col(&quot;ModelID&quot;)];</text>
<text text-anchor="middle" x="5721.5" y="-913.8" font-family="Times,serif" font-size="14.00">right: [col(&quot;ModelID&quot;)]</text>
</g>
<!-- p12&#45;&#45;p13 -->
<g id="edge13" class="edge">
<title>p12--p13</title>
<path fill="none" stroke="black" d="M5705.84,-994.97C5708.51,-984.51 5711.97,-970.9 5714.96,-959.16"/>
</g>
<!-- p14 -->
<g id="node15" class="node">
<title>p14</title>
<polygon fill="none" stroke="black" points="6818.5,-870 6530.5,-870 6530.5,-832 6818.5,-832 6818.5,-870"/>
<text text-anchor="middle" x="6674.5" y="-854.8" font-family="Times,serif" font-size="14.00">simple π 19/20</text>
<text text-anchor="middle" x="6674.5" y="-839.8" font-family="Times,serif" font-size="14.00">[&quot;BinNegatives&quot;, ... 18 other columns]</text>
</g>
<!-- p13&#45;&#45;p14 -->
<g id="edge14" class="edge">
<title>p13--p14</title>
<path fill="none" stroke="black" d="M5809.87,-924.13C5974.72,-910.38 6330.47,-880.7 6530.47,-864.02"/>
</g>
<!-- p20 -->
<g id="node21" class="node">
<title>p20</title>
<polygon fill="none" stroke="black" points="5495.5,-869 5441.5,-869 5441.5,-833 5495.5,-833 5495.5,-869"/>
<text text-anchor="middle" x="5468.5" y="-847.3" font-family="Times,serif" font-size="14.00">π 1/1</text>
</g>
<!-- p13&#45;&#45;p20 -->
<g id="edge20" class="edge">
<title>p13--p20</title>
<path fill="none" stroke="black" d="M5640.06,-905.91C5590.36,-890.29 5530,-871.33 5495.74,-860.56"/>
</g>
<!-- p15 -->
<g id="node16" class="node">
<title>p15</title>
<polygon fill="none" stroke="black" points="9063,-795 6192,-795 6192,-759 9063,-759 9063,-795"/>
<text text-anchor="middle" x="7627.5" y="-773.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;BinPositives&quot;)) / (col(&quot;BinResponseCount&quot;))].alias(&quot;BinPropensity&quot;), [([(col(&quot;BinPositives&quot;)) + (0.5)]) / ([(col(&quot;BinResponseCount&quot;)) + (1.0)])].alias(&quot;BinAdjustedPropensity&quot;), when([(col(&quot;__POLARS_CSER_0x826d6be128820951&quot;).list.length()) &gt; (1)]).then(col(&quot;__POLARS_CSER_0x826d6be128820951&quot;).list.get([dyn int: 0])).otherwise(String(Primary)).alias(&quot;PredictorCategory&quot;)]</text>
</g>
<!-- p14&#45;&#45;p15 -->
<g id="edge15" class="edge">
<title>p14--p15</title>
<path fill="none" stroke="black" d="M6818.72,-839.1C6973.52,-827.41 7221.49,-808.67 7402.09,-795.03"/>
</g>
<!-- p16 -->
<g id="node17" class="node">
<title>p16</title>
<polygon fill="none" stroke="black" points="8449.5,-722 7517.5,-722 7517.5,-686 8449.5,-686 8449.5,-722"/>
<text text-anchor="middle" x="7983.5" y="-700.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;PredictorName&quot;).strict_cast(String).str.split([String(.)]).alias(&quot;__POLARS_CSER_0x826d6be128820951&quot;)]</text>
</g>
<!-- p15&#45;&#45;p16 -->
<g id="edge16" class="edge">
<title>p15--p16</title>
<path fill="none" stroke="black" d="M7712.77,-758.99C7768.82,-747.81 7841.9,-733.24 7898,-722.05"/>
</g>
<!-- p17 -->
<g id="node18" class="node">
<title>p17</title>
<polygon fill="none" stroke="black" points="11283.5,-649 5397.5,-649 5397.5,-613 11283.5,-613 11283.5,-649"/>
<text text-anchor="middle" x="8340.5" y="-627.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;BinNegatives&quot;).strict_cast(Float32), col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;Positives&quot;).strict_cast(Float32), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;), col(&quot;BinResponseCount&quot;).strict_cast(Float32), col(&quot;GroupIndex&quot;).strict_cast(UInt32), col(&quot;BinType&quot;).strict_cast(Categorical(None, Physical)), col(&quot;PredictorName&quot;).strict_cast(Categorical(None, Physical)), col(&quot;EntryType&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Type&quot;).strict_cast(Categorical(None, Physical)), col(&quot;BinIndex&quot;).strict_cast(UInt16), col(&quot;BinPositives&quot;).strict_cast(Float32)]</text>
</g>
<!-- p16&#45;&#45;p17 -->
<g id="edge17" class="edge">
<title>p16--p17</title>
<path fill="none" stroke="black" d="M8069.01,-685.99C8125.22,-674.81 8198.5,-660.24 8254.76,-649.05"/>
</g>
<!-- p18 -->
<g id="node19" class="node">
<title>p18</title>
<polygon fill="none" stroke="black" points="8382.5,-576 8298.5,-576 8298.5,-540 8382.5,-540 8382.5,-576"/>
<text text-anchor="middle" x="8340.5" y="-554.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p17&#45;&#45;p18 -->
<g id="edge18" class="edge">
<title>p17--p18</title>
<path fill="none" stroke="black" d="M8340.5,-612.81C8340.5,-601.65 8340.5,-587.16 8340.5,-576.03"/>
</g>
<!-- p19 -->
<g id="node20" class="node">
<title>p19</title>
<polygon fill="none" stroke="black" points="8378,-504 8303,-504 8303,-451 8378,-451 8378,-504"/>
<text text-anchor="middle" x="8340.5" y="-488.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="8340.5" y="-473.8" font-family="Times,serif" font-size="14.00">π 16/36;</text>
<text text-anchor="middle" x="8340.5" y="-458.8" font-family="Times,serif" font-size="14.00">σ None</text>
</g>
<!-- p18&#45;&#45;p19 -->
<g id="edge19" class="edge">
<title>p18--p19</title>
<path fill="none" stroke="black" d="M8340.5,-539.97C8340.5,-529.51 8340.5,-515.9 8340.5,-504.16"/>
</g>
<!-- p21 -->
<g id="node22" class="node">
<title>p21</title>
<polygon fill="none" stroke="black" points="5462,-796 5349,-796 5349,-758 5462,-758 5462,-796"/>
<text text-anchor="middle" x="5405.5" y="-780.8" font-family="Times,serif" font-size="14.00">simple π 1/15</text>
<text text-anchor="middle" x="5405.5" y="-765.8" font-family="Times,serif" font-size="14.00">[&quot;ModelID&quot;]</text>
</g>
<!-- p20&#45;&#45;p21 -->
<g id="edge21" class="edge">
<title>p20--p21</title>
<path fill="none" stroke="black" d="M5453.57,-832.94C5443.89,-821.88 5431.29,-807.48 5421.42,-796.2"/>
</g>
<!-- p21&#45;&#45;c0 -->
<g id="edge22" class="edge">
<title>p21--c0</title>
<path fill="none" stroke="black" d="M5351.98,-757.99C5319.14,-746.94 5277.34,-732.87 5245.05,-722.01"/>
</g>
<!-- p23 -->
<g id="node24" class="node">
<title>p23</title>
<polygon fill="none" stroke="black" points="3313.5,-576 2935.5,-576 2935.5,-540 3313.5,-540 3313.5,-576"/>
<text text-anchor="middle" x="3124.5" y="-554.3" font-family="Times,serif" font-size="14.00">FILTER BY col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p22&#45;&#45;p23 -->
<g id="edge24" class="edge">
<title>p22--p23</title>
<path fill="none" stroke="black" d="M3791.37,-614.57C3650.03,-602.79 3456.01,-586.63 3313.68,-574.77"/>
</g>
<!-- p24 -->
<g id="node25" class="node">
<title>p24</title>
<polygon fill="none" stroke="black" points="2883.5,-496.5 2513.5,-496.5 2513.5,-458.5 2883.5,-458.5 2883.5,-496.5"/>
<text text-anchor="middle" x="2698.5" y="-481.3" font-family="Times,serif" font-size="14.00">simple π 15/16</text>
<text text-anchor="middle" x="2698.5" y="-466.3" font-family="Times,serif" font-size="14.00">[&quot;ResponseCount&quot;, &quot;Group&quot;, ... 13 other columns]</text>
</g>
<!-- p23&#45;&#45;p24 -->
<g id="edge25" class="edge">
<title>p23--p24</title>
<path fill="none" stroke="black" d="M3032.06,-539.97C2962.45,-527.14 2867.2,-509.59 2796.31,-496.52"/>
</g>
<!-- p25 -->
<g id="node26" class="node">
<title>p25</title>
<polygon fill="none" stroke="black" points="4971,-415 0,-415 0,-379 4971,-379 4971,-415"/>
<text text-anchor="middle" x="2485.5" y="-393.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [when([(col(&quot;__POLARS_CSER_0xa1a67808544c6492&quot;).is_not_nan()) | (col(&quot;__POLARS_CSER_0xa1a67808544c6492&quot;).is_null())]).then(col(&quot;__POLARS_CSER_0xa1a67808544c6492&quot;)).otherwise(0.0).alias(&quot;SuccessRate&quot;), when([(col(&quot;Positives&quot;).min()) == (col(&quot;Positives&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;Positives&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_Positives&quot;), when([(col(&quot;ResponseCount&quot;).min()) == (col(&quot;ResponseCount&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;ResponseCount&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_ResponseCount&quot;)]</text>
</g>
<!-- p24&#45;&#45;p25 -->
<g id="edge26" class="edge">
<title>p24--p25</title>
<path fill="none" stroke="black" d="M2649.63,-458.49C2614.26,-445.45 2566.75,-427.94 2531.95,-415.12"/>
</g>
<!-- p26 -->
<g id="node27" class="node">
<title>p26</title>
<polygon fill="none" stroke="black" points="2891,-343 2080,-343 2080,-307 2891,-307 2891,-343"/>
<text text-anchor="middle" x="2485.5" y="-321.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;Positives&quot;)) / (col(&quot;ResponseCount&quot;))].alias(&quot;__POLARS_CSER_0xa1a67808544c6492&quot;)]</text>
</g>
<!-- p25&#45;&#45;p26 -->
<g id="edge27" class="edge">
<title>p25--p26</title>
<path fill="none" stroke="black" d="M2485.5,-378.7C2485.5,-367.85 2485.5,-353.92 2485.5,-343.1"/>
</g>
<!-- p27 -->
<g id="node28" class="node">
<title>p27</title>
<polygon fill="none" stroke="black" points="4890.5,-271 80.5,-271 80.5,-235 4890.5,-235 4890.5,-271"/>
<text text-anchor="middle" x="2485.5" y="-249.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;Group&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Direction&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;Issue&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;), col(&quot;Configuration&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Channel&quot;).strict_cast(Categorical(None, Physical))]</text>
</g>
<!-- p26&#45;&#45;p27 -->
<g id="edge28" class="edge">
<title>p26--p27</title>
<path fill="none" stroke="black" d="M2485.5,-306.7C2485.5,-295.85 2485.5,-281.92 2485.5,-271.1"/>
</g>
<!-- p28 -->
<g id="node29" class="node">
<title>p28</title>
<polygon fill="none" stroke="black" points="2670.5,-199 2300.5,-199 2300.5,-161 2670.5,-161 2670.5,-199"/>
<text text-anchor="middle" x="2485.5" y="-183.8" font-family="Times,serif" font-size="14.00">simple π 12/12</text>
<text text-anchor="middle" x="2485.5" y="-168.8" font-family="Times,serif" font-size="14.00">[&quot;ResponseCount&quot;, &quot;Group&quot;, ... 10 other columns]</text>
</g>
<!-- p27&#45;&#45;p28 -->
<g id="edge29" class="edge">
<title>p27--p28</title>
<path fill="none" stroke="black" d="M2485.5,-234.81C2485.5,-223.98 2485.5,-210.01 2485.5,-199.02"/>
</g>
<!-- p29 -->
<g id="node30" class="node">
<title>p29</title>
<polygon fill="none" stroke="black" points="2527.5,-125 2443.5,-125 2443.5,-89 2527.5,-89 2527.5,-125"/>
<text text-anchor="middle" x="2485.5" y="-103.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p28&#45;&#45;p29 -->
<g id="edge30" class="edge">
<title>p28--p29</title>
<path fill="none" stroke="black" d="M2485.5,-160.72C2485.5,-149.7 2485.5,-135.78 2485.5,-125"/>
</g>
<!-- p30 -->
<g id="node31" class="node">
<title>p30</title>
<polygon fill="none" stroke="black" points="2641,-53 2330,-53 2330,0 2641,0 2641,-53"/>
<text text-anchor="middle" x="2485.5" y="-37.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="2485.5" y="-22.8" font-family="Times,serif" font-size="14.00">π 12/27;</text>
<text text-anchor="middle" x="2485.5" y="-7.8" font-family="Times,serif" font-size="14.00">σ col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p29&#45;&#45;p30 -->
<g id="edge31" class="edge">
<title>p29--p30</title>
<path fill="none" stroke="black" d="M2485.5,-88.97C2485.5,-78.51 2485.5,-64.9 2485.5,-53.16"/>
</g>
</g>
</svg>