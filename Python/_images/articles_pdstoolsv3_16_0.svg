<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="11270pt" height="1128pt" viewBox="0.00 0.00 11269.50 1128.00">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1124)">
<title>polars_query</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1124 11265.5,-1124 11265.5,4 -4,4"/>
<!-- p1 -->
<g id="node1" class="node">
<title>p1</title>
<polygon fill="none" stroke="black" points="5522.5,-1120 5346.5,-1120 5346.5,-1067 5522.5,-1067 5522.5,-1120"/>
<text text-anchor="middle" x="5434.5" y="-1104.8" font-family="Times,serif" font-size="14.00">JOIN INNER</text>
<text text-anchor="middle" x="5434.5" y="-1089.8" font-family="Times,serif" font-size="14.00">left: [col(&quot;ModelID&quot;)];</text>
<text text-anchor="middle" x="5434.5" y="-1074.8" font-family="Times,serif" font-size="14.00">right: [col(&quot;ModelID&quot;)]</text>
</g>
<!-- p2 -->
<g id="node2" class="node">
<title>p2</title>
<polygon fill="none" stroke="black" points="5593,-950.5 4750,-950.5 4750,-914.5 5593,-914.5 5593,-950.5"/>
<text text-anchor="middle" x="5171.5" y="-928.8" font-family="Times,serif" font-size="14.00">FILTER BY [(col(&quot;SnapshotTime&quot;).fill_null_with_strategy()) == (col(&quot;SnapshotTime&quot;).fill_null_with_strategy().max())]</text>
</g>
<!-- p1&#45;&#45;p2 -->
<g id="edge1" class="edge">
<title>p1--p2</title>
<path fill="none" stroke="black" d="M5346.23,-1074.97C5313.23,-1065.57 5276.71,-1051.55 5247.5,-1031 5217.14,-1009.63 5193.1,-972.62 5180.71,-950.86"/>
</g>
<!-- p12 -->
<g id="node13" class="node">
<title>p12</title>
<polygon fill="none" stroke="black" points="6100,-1031 5257,-1031 5257,-995 6100,-995 6100,-1031"/>
<text text-anchor="middle" x="5678.5" y="-1009.3" font-family="Times,serif" font-size="14.00">FILTER BY [(col(&quot;SnapshotTime&quot;).fill_null_with_strategy()) == (col(&quot;SnapshotTime&quot;).fill_null_with_strategy().max())]</text>
</g>
<!-- p1&#45;&#45;p12 -->
<g id="edge12" class="edge">
<title>p1--p12</title>
<path fill="none" stroke="black" d="M5514.06,-1066.9C5550.63,-1055.14 5593.02,-1041.5 5625.6,-1031.02"/>
</g>
<!-- c0 -->
<g id="node3" class="node">
<title>c0</title>
<polygon fill="none" stroke="black" points="5237.5,-722 5105.5,-722 5105.5,-686 5237.5,-686 5237.5,-722"/>
<text text-anchor="middle" x="5171.5" y="-700.3" font-family="Times,serif" font-size="14.00">CACHE: 1 times</text>
</g>
<!-- p2&#45;&#45;c0 -->
<g id="edge2" class="edge">
<title>p2--c0</title>
<path fill="none" stroke="black" d="M5171.5,-914.48C5171.5,-872.5 5171.5,-764.4 5171.5,-722.22"/>
</g>
<!-- p3 -->
<g id="node4" class="node">
<title>p3</title>
<polygon fill="none" stroke="black" points="5357,-650 4986,-650 4986,-612 5357,-612 5357,-650"/>
<text text-anchor="middle" x="5171.5" y="-634.8" font-family="Times,serif" font-size="14.00">simple π 15/15</text>
<text text-anchor="middle" x="5171.5" y="-619.8" font-family="Times,serif" font-size="14.00">[&quot;Configuration&quot;, &quot;Channel&quot;, ... 13 other columns]</text>
</g>
<!-- c0&#45;&#45;p3 -->
<g id="edge3" class="edge">
<title>c0--p3</title>
<path fill="none" stroke="black" d="M5171.5,-685.81C5171.5,-674.98 5171.5,-661.01 5171.5,-650.02"/>
</g>
<!-- p22 -->
<g id="node23" class="node">
<title>p22</title>
<polygon fill="none" stroke="black" points="4138,-650 3767,-650 3767,-612 4138,-612 4138,-650"/>
<text text-anchor="middle" x="3952.5" y="-634.8" font-family="Times,serif" font-size="14.00">simple π 15/15</text>
<text text-anchor="middle" x="3952.5" y="-619.8" font-family="Times,serif" font-size="14.00">[&quot;Configuration&quot;, &quot;Channel&quot;, ... 13 other columns]</text>
</g>
<!-- c0&#45;&#45;p22 -->
<g id="edge23" class="edge">
<title>c0--p22</title>
<path fill="none" stroke="black" d="M5105.1,-699.13C4923.75,-688.57 4415.2,-658.95 4138.13,-642.81"/>
</g>
<!-- p4 -->
<g id="node5" class="node">
<title>p4</title>
<polygon fill="none" stroke="black" points="6809.5,-576 6431.5,-576 6431.5,-540 6809.5,-540 6809.5,-576"/>
<text text-anchor="middle" x="6620.5" y="-554.3" font-family="Times,serif" font-size="14.00">FILTER BY col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p3&#45;&#45;p4 -->
<g id="edge4" class="edge">
<title>p3--p4</title>
<path fill="none" stroke="black" d="M5357.01,-612.66C5360.2,-612.43 5363.36,-612.21 5366.5,-612 5743.71,-586.63 6185.62,-571.31 6431.26,-564.06"/>
</g>
<!-- p5 -->
<g id="node6" class="node">
<title>p5</title>
<polygon fill="none" stroke="black" points="7221,-496.5 6850,-496.5 6850,-458.5 7221,-458.5 7221,-496.5"/>
<text text-anchor="middle" x="7035.5" y="-481.3" font-family="Times,serif" font-size="14.00">simple π 15/16</text>
<text text-anchor="middle" x="7035.5" y="-466.3" font-family="Times,serif" font-size="14.00">[&quot;Configuration&quot;, &quot;Channel&quot;, ... 13 other columns]</text>
</g>
<!-- p4&#45;&#45;p5 -->
<g id="edge5" class="edge">
<title>p4--p5</title>
<path fill="none" stroke="black" d="M6710.55,-539.97C6778.37,-527.14 6871.15,-509.59 6940.22,-496.52"/>
</g>
<!-- p6 -->
<g id="node7" class="node">
<title>p6</title>
<polygon fill="none" stroke="black" points="9928,-415 4973,-415 4973,-379 9928,-379 9928,-415"/>
<text text-anchor="middle" x="7450.5" y="-393.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [when([(col(&quot;__POLARS_CSER_0xc9dc0c490b9f024b&quot;).is_not_nan()) | (col(&quot;__POLARS_CSER_0xc9dc0c490b9f024b&quot;).is_null())]).then(col(&quot;__POLARS_CSER_0xc9dc0c490b9f024b&quot;)).otherwise(0.0).alias(&quot;SuccessRate&quot;), when([(col(&quot;Positives&quot;).min()) == (col(&quot;Positives&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;Positives&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_Positives&quot;), when([(col(&quot;ResponseCount&quot;).min()) == (col(&quot;ResponseCount&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;ResponseCount&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_ResponseCount&quot;)]</text>
</g>
<!-- p5&#45;&#45;p6 -->
<g id="edge6" class="edge">
<title>p5--p6</title>
<path fill="none" stroke="black" d="M7130.71,-458.49C7199.75,-445.43 7292.52,-427.88 7360.36,-415.05"/>
</g>
<!-- p7 -->
<g id="node8" class="node">
<title>p7</title>
<polygon fill="none" stroke="black" points="7853.5,-343 7047.5,-343 7047.5,-307 7853.5,-307 7853.5,-343"/>
<text text-anchor="middle" x="7450.5" y="-321.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;Positives&quot;)) / (col(&quot;ResponseCount&quot;))].alias(&quot;__POLARS_CSER_0xc9dc0c490b9f024b&quot;)]</text>
</g>
<!-- p6&#45;&#45;p7 -->
<g id="edge7" class="edge">
<title>p6--p7</title>
<path fill="none" stroke="black" d="M7450.5,-378.7C7450.5,-367.85 7450.5,-353.92 7450.5,-343.1"/>
</g>
<!-- p8 -->
<g id="node9" class="node">
<title>p8</title>
<polygon fill="none" stroke="black" points="9855.5,-271 5045.5,-271 5045.5,-235 9855.5,-235 9855.5,-271"/>
<text text-anchor="middle" x="7450.5" y="-249.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;Configuration&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Channel&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Issue&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;Group&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Direction&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;)]</text>
</g>
<!-- p7&#45;&#45;p8 -->
<g id="edge8" class="edge">
<title>p7--p8</title>
<path fill="none" stroke="black" d="M7450.5,-306.7C7450.5,-295.85 7450.5,-281.92 7450.5,-271.1"/>
</g>
<!-- p9 -->
<g id="node10" class="node">
<title>p9</title>
<polygon fill="none" stroke="black" points="7636,-199 7265,-199 7265,-161 7636,-161 7636,-199"/>
<text text-anchor="middle" x="7450.5" y="-183.8" font-family="Times,serif" font-size="14.00">simple π 12/12</text>
<text text-anchor="middle" x="7450.5" y="-168.8" font-family="Times,serif" font-size="14.00">[&quot;Configuration&quot;, &quot;Channel&quot;, ... 10 other columns]</text>
</g>
<!-- p8&#45;&#45;p9 -->
<g id="edge9" class="edge">
<title>p8--p9</title>
<path fill="none" stroke="black" d="M7450.5,-234.81C7450.5,-223.98 7450.5,-210.01 7450.5,-199.02"/>
</g>
<!-- p10 -->
<g id="node11" class="node">
<title>p10</title>
<polygon fill="none" stroke="black" points="7492.5,-125 7408.5,-125 7408.5,-89 7492.5,-89 7492.5,-125"/>
<text text-anchor="middle" x="7450.5" y="-103.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p9&#45;&#45;p10 -->
<g id="edge10" class="edge">
<title>p9--p10</title>
<path fill="none" stroke="black" d="M7450.5,-160.72C7450.5,-149.7 7450.5,-135.78 7450.5,-125"/>
</g>
<!-- p11 -->
<g id="node12" class="node">
<title>p11</title>
<polygon fill="none" stroke="black" points="7606,-53 7295,-53 7295,0 7606,0 7606,-53"/>
<text text-anchor="middle" x="7450.5" y="-37.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="7450.5" y="-22.8" font-family="Times,serif" font-size="14.00">π 12/27;</text>
<text text-anchor="middle" x="7450.5" y="-7.8" font-family="Times,serif" font-size="14.00">σ col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p10&#45;&#45;p11 -->
<g id="edge11" class="edge">
<title>p10--p11</title>
<path fill="none" stroke="black" d="M7450.5,-88.97C7450.5,-78.51 7450.5,-64.9 7450.5,-53.16"/>
</g>
<!-- p13 -->
<g id="node14" class="node">
<title>p13</title>
<polygon fill="none" stroke="black" points="5786.5,-959 5610.5,-959 5610.5,-906 5786.5,-906 5786.5,-959"/>
<text text-anchor="middle" x="5698.5" y="-943.8" font-family="Times,serif" font-size="14.00">JOIN INNER</text>
<text text-anchor="middle" x="5698.5" y="-928.8" font-family="Times,serif" font-size="14.00">left: [col(&quot;ModelID&quot;)];</text>
<text text-anchor="middle" x="5698.5" y="-913.8" font-family="Times,serif" font-size="14.00">right: [col(&quot;ModelID&quot;)]</text>
</g>
<!-- p12&#45;&#45;p13 -->
<g id="edge13" class="edge">
<title>p12--p13</title>
<path fill="none" stroke="black" d="M5682.84,-994.97C5685.51,-984.51 5688.97,-970.9 5691.96,-959.16"/>
</g>
<!-- p14 -->
<g id="node15" class="node">
<title>p14</title>
<polygon fill="none" stroke="black" points="6824.5,-870 6470.5,-870 6470.5,-832 6824.5,-832 6824.5,-870"/>
<text text-anchor="middle" x="6647.5" y="-854.8" font-family="Times,serif" font-size="14.00">simple π 19/20</text>
<text text-anchor="middle" x="6647.5" y="-839.8" font-family="Times,serif" font-size="14.00">[&quot;EntryType&quot;, &quot;Contents&quot;, ... 17 other columns]</text>
</g>
<!-- p13&#45;&#45;p14 -->
<g id="edge14" class="edge">
<title>p13--p14</title>
<path fill="none" stroke="black" d="M5786.5,-924.13C5941.7,-911.13 6266.81,-883.89 6470.13,-866.86"/>
</g>
<!-- p20 -->
<g id="node21" class="node">
<title>p20</title>
<polygon fill="none" stroke="black" points="5448.5,-869 5394.5,-869 5394.5,-833 5448.5,-833 5448.5,-869"/>
<text text-anchor="middle" x="5421.5" y="-847.3" font-family="Times,serif" font-size="14.00">π 1/1</text>
</g>
<!-- p13&#45;&#45;p20 -->
<g id="edge20" class="edge">
<title>p13--p20</title>
<path fill="none" stroke="black" d="M5610.47,-906.24C5554.55,-890.19 5485.91,-870.49 5448.68,-859.8"/>
</g>
<!-- p15 -->
<g id="node16" class="node">
<title>p15</title>
<polygon fill="none" stroke="black" points="9030,-795 6163,-795 6163,-759 9030,-759 9030,-795"/>
<text text-anchor="middle" x="7596.5" y="-773.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;BinPositives&quot;)) / (col(&quot;BinResponseCount&quot;))].alias(&quot;BinPropensity&quot;), [([(col(&quot;BinPositives&quot;)) + (0.5)]) / ([(col(&quot;BinResponseCount&quot;)) + (1.0)])].alias(&quot;BinAdjustedPropensity&quot;), when([(col(&quot;__POLARS_CSER_0x8e7ea6131bd62b5a&quot;).list.length()) &gt; (1)]).then(col(&quot;__POLARS_CSER_0x8e7ea6131bd62b5a&quot;).list.get([dyn int: 0])).otherwise(String(Primary)).alias(&quot;PredictorCategory&quot;)]</text>
</g>
<!-- p14&#45;&#45;p15 -->
<g id="edge15" class="edge">
<title>p14--p15</title>
<path fill="none" stroke="black" d="M6824.61,-836.56C6979.35,-824.82 7204.78,-807.72 7372.11,-795.02"/>
</g>
<!-- p16 -->
<g id="node17" class="node">
<title>p16</title>
<polygon fill="none" stroke="black" points="8422.5,-722 7492.5,-722 7492.5,-686 8422.5,-686 8422.5,-722"/>
<text text-anchor="middle" x="7957.5" y="-700.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;PredictorName&quot;).strict_cast(String).str.split([String(.)]).alias(&quot;__POLARS_CSER_0x8e7ea6131bd62b5a&quot;)]</text>
</g>
<!-- p15&#45;&#45;p16 -->
<g id="edge16" class="edge">
<title>p15--p16</title>
<path fill="none" stroke="black" d="M7682.97,-758.99C7739.81,-747.81 7813.91,-733.24 7870.8,-722.05"/>
</g>
<!-- p17 -->
<g id="node18" class="node">
<title>p17</title>
<polygon fill="none" stroke="black" points="11261.5,-649 5375.5,-649 5375.5,-613 11261.5,-613 11261.5,-649"/>
<text text-anchor="middle" x="8318.5" y="-627.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;EntryType&quot;).strict_cast(Categorical(None, Physical)), col(&quot;BinType&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Type&quot;).strict_cast(Categorical(None, Physical)), col(&quot;BinNegatives&quot;).strict_cast(Float32), col(&quot;PredictorName&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;GroupIndex&quot;).strict_cast(UInt32), col(&quot;BinPositives&quot;).strict_cast(Float32), col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;BinIndex&quot;).strict_cast(UInt16), col(&quot;BinResponseCount&quot;).strict_cast(Float32), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;)]</text>
</g>
<!-- p16&#45;&#45;p17 -->
<g id="edge17" class="edge">
<title>p16--p17</title>
<path fill="none" stroke="black" d="M8043.97,-685.99C8100.81,-674.81 8174.91,-660.24 8231.8,-649.05"/>
</g>
<!-- p18 -->
<g id="node19" class="node">
<title>p18</title>
<polygon fill="none" stroke="black" points="8360.5,-576 8276.5,-576 8276.5,-540 8360.5,-540 8360.5,-576"/>
<text text-anchor="middle" x="8318.5" y="-554.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p17&#45;&#45;p18 -->
<g id="edge18" class="edge">
<title>p17--p18</title>
<path fill="none" stroke="black" d="M8318.5,-612.81C8318.5,-601.65 8318.5,-587.16 8318.5,-576.03"/>
</g>
<!-- p19 -->
<g id="node20" class="node">
<title>p19</title>
<polygon fill="none" stroke="black" points="8356,-504 8281,-504 8281,-451 8356,-451 8356,-504"/>
<text text-anchor="middle" x="8318.5" y="-488.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="8318.5" y="-473.8" font-family="Times,serif" font-size="14.00">π 16/36;</text>
<text text-anchor="middle" x="8318.5" y="-458.8" font-family="Times,serif" font-size="14.00">σ None</text>
</g>
<!-- p18&#45;&#45;p19 -->
<g id="edge19" class="edge">
<title>p18--p19</title>
<path fill="none" stroke="black" d="M8318.5,-539.97C8318.5,-529.51 8318.5,-515.9 8318.5,-504.16"/>
</g>
<!-- p21 -->
<g id="node22" class="node">
<title>p21</title>
<polygon fill="none" stroke="black" points="5423,-796 5310,-796 5310,-758 5423,-758 5423,-796"/>
<text text-anchor="middle" x="5366.5" y="-780.8" font-family="Times,serif" font-size="14.00">simple π 1/15</text>
<text text-anchor="middle" x="5366.5" y="-765.8" font-family="Times,serif" font-size="14.00">[&quot;ModelID&quot;]</text>
</g>
<!-- p20&#45;&#45;p21 -->
<g id="edge21" class="edge">
<title>p20--p21</title>
<path fill="none" stroke="black" d="M5408.47,-832.94C5400.02,-821.88 5389.02,-807.48 5380.4,-796.2"/>
</g>
<!-- p21&#45;&#45;c0 -->
<g id="edge22" class="edge">
<title>p21--c0</title>
<path fill="none" stroke="black" d="M5317.04,-757.99C5286.69,-746.94 5248.06,-732.87 5218.22,-722.01"/>
</g>
<!-- p23 -->
<g id="node24" class="node">
<title>p23</title>
<polygon fill="none" stroke="black" points="3298.5,-576 2920.5,-576 2920.5,-540 3298.5,-540 3298.5,-576"/>
<text text-anchor="middle" x="3109.5" y="-554.3" font-family="Times,serif" font-size="14.00">FILTER BY col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p22&#45;&#45;p23 -->
<g id="edge24" class="edge">
<title>p22--p23</title>
<path fill="none" stroke="black" d="M3766.98,-614.37C3627.97,-602.67 3438.44,-586.7 3298.58,-574.92"/>
</g>
<!-- p24 -->
<g id="node25" class="node">
<title>p24</title>
<polygon fill="none" stroke="black" points="2874,-496.5 2503,-496.5 2503,-458.5 2874,-458.5 2874,-496.5"/>
<text text-anchor="middle" x="2688.5" y="-481.3" font-family="Times,serif" font-size="14.00">simple π 15/16</text>
<text text-anchor="middle" x="2688.5" y="-466.3" font-family="Times,serif" font-size="14.00">[&quot;Configuration&quot;, &quot;Channel&quot;, ... 13 other columns]</text>
</g>
<!-- p23&#45;&#45;p24 -->
<g id="edge25" class="edge">
<title>p23--p24</title>
<path fill="none" stroke="black" d="M3018.15,-539.97C2949.35,-527.14 2855.22,-509.59 2785.16,-496.52"/>
</g>
<!-- p25 -->
<g id="node26" class="node">
<title>p25</title>
<polygon fill="none" stroke="black" points="4955,-415 0,-415 0,-379 4955,-379 4955,-415"/>
<text text-anchor="middle" x="2477.5" y="-393.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [when([(col(&quot;__POLARS_CSER_0xc9dc0c490b9f024b&quot;).is_not_nan()) | (col(&quot;__POLARS_CSER_0xc9dc0c490b9f024b&quot;).is_null())]).then(col(&quot;__POLARS_CSER_0xc9dc0c490b9f024b&quot;)).otherwise(0.0).alias(&quot;SuccessRate&quot;), when([(col(&quot;Positives&quot;).min()) == (col(&quot;Positives&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;Positives&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_Positives&quot;), when([(col(&quot;ResponseCount&quot;).min()) == (col(&quot;ResponseCount&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;ResponseCount&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_ResponseCount&quot;)]</text>
</g>
<!-- p24&#45;&#45;p25 -->
<g id="edge26" class="edge">
<title>p24--p25</title>
<path fill="none" stroke="black" d="M2640.09,-458.49C2605.05,-445.45 2557.99,-427.94 2523.51,-415.12"/>
</g>
<!-- p26 -->
<g id="node27" class="node">
<title>p26</title>
<polygon fill="none" stroke="black" points="2880.5,-343 2074.5,-343 2074.5,-307 2880.5,-307 2880.5,-343"/>
<text text-anchor="middle" x="2477.5" y="-321.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;Positives&quot;)) / (col(&quot;ResponseCount&quot;))].alias(&quot;__POLARS_CSER_0xc9dc0c490b9f024b&quot;)]</text>
</g>
<!-- p25&#45;&#45;p26 -->
<g id="edge27" class="edge">
<title>p25--p26</title>
<path fill="none" stroke="black" d="M2477.5,-378.7C2477.5,-367.85 2477.5,-353.92 2477.5,-343.1"/>
</g>
<!-- p27 -->
<g id="node28" class="node">
<title>p27</title>
<polygon fill="none" stroke="black" points="4882.5,-271 72.5,-271 72.5,-235 4882.5,-235 4882.5,-271"/>
<text text-anchor="middle" x="2477.5" y="-249.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;Configuration&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Channel&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Issue&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;Group&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Direction&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;)]</text>
</g>
<!-- p26&#45;&#45;p27 -->
<g id="edge28" class="edge">
<title>p26--p27</title>
<path fill="none" stroke="black" d="M2477.5,-306.7C2477.5,-295.85 2477.5,-281.92 2477.5,-271.1"/>
</g>
<!-- p28 -->
<g id="node29" class="node">
<title>p28</title>
<polygon fill="none" stroke="black" points="2663,-199 2292,-199 2292,-161 2663,-161 2663,-199"/>
<text text-anchor="middle" x="2477.5" y="-183.8" font-family="Times,serif" font-size="14.00">simple π 12/12</text>
<text text-anchor="middle" x="2477.5" y="-168.8" font-family="Times,serif" font-size="14.00">[&quot;Configuration&quot;, &quot;Channel&quot;, ... 10 other columns]</text>
</g>
<!-- p27&#45;&#45;p28 -->
<g id="edge29" class="edge">
<title>p27--p28</title>
<path fill="none" stroke="black" d="M2477.5,-234.81C2477.5,-223.98 2477.5,-210.01 2477.5,-199.02"/>
</g>
<!-- p29 -->
<g id="node30" class="node">
<title>p29</title>
<polygon fill="none" stroke="black" points="2519.5,-125 2435.5,-125 2435.5,-89 2519.5,-89 2519.5,-125"/>
<text text-anchor="middle" x="2477.5" y="-103.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p28&#45;&#45;p29 -->
<g id="edge30" class="edge">
<title>p28--p29</title>
<path fill="none" stroke="black" d="M2477.5,-160.72C2477.5,-149.7 2477.5,-135.78 2477.5,-125"/>
</g>
<!-- p30 -->
<g id="node31" class="node">
<title>p30</title>
<polygon fill="none" stroke="black" points="2633,-53 2322,-53 2322,0 2633,0 2633,-53"/>
<text text-anchor="middle" x="2477.5" y="-37.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="2477.5" y="-22.8" font-family="Times,serif" font-size="14.00">π 12/27;</text>
<text text-anchor="middle" x="2477.5" y="-7.8" font-family="Times,serif" font-size="14.00">σ col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p29&#45;&#45;p30 -->
<g id="edge31" class="edge">
<title>p29--p30</title>
<path fill="none" stroke="black" d="M2477.5,-88.97C2477.5,-78.51 2477.5,-64.9 2477.5,-53.16"/>
</g>
</g>
</svg>