<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="11262pt" height="906pt" viewBox="0.00 0.00 11262.00 906.00">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 902)">
<title>polars_query</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-902 11258,-902 11258,4 -4,4"/>
<!-- p1 -->
<g id="node1" class="node">
<title>p1</title>
<polygon fill="none" stroke="black" points="5232,-898 5056,-898 5056,-845 5232,-845 5232,-898"/>
<text text-anchor="middle" x="5144" y="-882.8" font-family="Times,serif" font-size="14.00">JOIN INNER</text>
<text text-anchor="middle" x="5144" y="-867.8" font-family="Times,serif" font-size="14.00">left: [col(&quot;ModelID&quot;)];</text>
<text text-anchor="middle" x="5144" y="-852.8" font-family="Times,serif" font-size="14.00">right: [col(&quot;ModelID&quot;)]</text>
</g>
<!-- p2 -->
<g id="node2" class="node">
<title>p2</title>
<polygon fill="none" stroke="black" points="5302.5,-728.5 4459.5,-728.5 4459.5,-692.5 5302.5,-692.5 5302.5,-728.5"/>
<text text-anchor="middle" x="4881" y="-706.8" font-family="Times,serif" font-size="14.00">FILTER BY [(col(&quot;SnapshotTime&quot;).fill_null_with_strategy()) == (col(&quot;SnapshotTime&quot;).fill_null_with_strategy().max())]</text>
</g>
<!-- p1&#45;&#45;p2 -->
<g id="edge1" class="edge">
<title>p1--p2</title>
<path fill="none" stroke="black" d="M5055.79,-852.66C5023.11,-843.24 4986.98,-829.29 4958,-809 4927.43,-787.6 4903.01,-750.6 4890.39,-728.85"/>
</g>
<!-- p9 -->
<g id="node10" class="node">
<title>p9</title>
<polygon fill="none" stroke="black" points="5809.5,-809 4966.5,-809 4966.5,-773 5809.5,-773 5809.5,-809"/>
<text text-anchor="middle" x="5388" y="-787.3" font-family="Times,serif" font-size="14.00">FILTER BY [(col(&quot;SnapshotTime&quot;).fill_null_with_strategy()) == (col(&quot;SnapshotTime&quot;).fill_null_with_strategy().max())]</text>
</g>
<!-- p1&#45;&#45;p9 -->
<g id="edge9" class="edge">
<title>p1--p9</title>
<path fill="none" stroke="black" d="M5223.56,-844.9C5260.13,-833.14 5302.52,-819.5 5335.1,-809.02"/>
</g>
<!-- c0 -->
<g id="node3" class="node">
<title>c0</title>
<polygon fill="none" stroke="black" points="4990,-502 4858,-502 4858,-466 4990,-466 4990,-502"/>
<text text-anchor="middle" x="4924" y="-480.3" font-family="Times,serif" font-size="14.00">CACHE: 1 times</text>
</g>
<!-- p2&#45;&#45;c0 -->
<g id="edge2" class="edge">
<title>p2--c0</title>
<path fill="none" stroke="black" d="M4881.13,-692.13C4881.77,-660.77 4884.94,-592.89 4900,-538 4903.42,-525.53 4909.42,-512.28 4914.57,-502.15"/>
</g>
<!-- p3 -->
<g id="node4" class="node">
<title>p3</title>
<polygon fill="none" stroke="black" points="6521,-421.5 6143,-421.5 6143,-385.5 6521,-385.5 6521,-421.5"/>
<text text-anchor="middle" x="6332" y="-399.8" font-family="Times,serif" font-size="14.00">FILTER BY col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- c0&#45;&#45;p3 -->
<g id="edge3" class="edge">
<title>c0--p3</title>
<path fill="none" stroke="black" d="M4990.02,-479.32C5194.72,-467.91 5824.03,-432.82 6142.79,-415.05"/>
</g>
<!-- p17 -->
<g id="node18" class="node">
<title>p17</title>
<polygon fill="none" stroke="black" points="3703,-421.5 3325,-421.5 3325,-385.5 3703,-385.5 3703,-421.5"/>
<text text-anchor="middle" x="3514" y="-399.8" font-family="Times,serif" font-size="14.00">FILTER BY col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- c0&#45;&#45;p17 -->
<g id="edge18" class="edge">
<title>c0--p17</title>
<path fill="none" stroke="black" d="M4857.88,-479.32C4652.83,-467.9 4022.27,-432.8 3703.16,-415.03"/>
</g>
<!-- p4 -->
<g id="node5" class="node">
<title>p4</title>
<polygon fill="none" stroke="black" points="11254,-341 5636,-341 5636,-305 11254,-305 11254,-341"/>
<text text-anchor="middle" x="8445" y="-319.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [when([(col(&quot;__POLARS_CSER_0x36c299bdc8534abf&quot;).is_not_nan()) | (col(&quot;__POLARS_CSER_0x36c299bdc8534abf&quot;).is_null())]).then(col(&quot;__POLARS_CSER_0x36c299bdc8534abf&quot;)).otherwise(0.0).alias(&quot;SuccessRate&quot;), when([(col(&quot;Positives&quot;).min()) == (col(&quot;Positives&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;Positives&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_Positives&quot;), when([(col(&quot;ResponseCount&quot;).min()) == (col(&quot;ResponseCount&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;ResponseCount&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_ResponseCount&quot;), [(col(&quot;Positives&quot;)) / (col(&quot;ResponseCount&quot;))].alias(&quot;__POLARS_CSER_0x36c299bdc8534abf&quot;)]</text>
</g>
<!-- p3&#45;&#45;p4 -->
<g id="edge4" class="edge">
<title>p3--p4</title>
<path fill="none" stroke="black" d="M6521.37,-395.46C6848.88,-383.3 7529.82,-358 7987.23,-341.01"/>
</g>
<!-- p5 -->
<g id="node6" class="node">
<title>p5</title>
<polygon fill="none" stroke="black" points="10850,-269 6040,-269 6040,-233 10850,-233 10850,-269"/>
<text text-anchor="middle" x="8445" y="-247.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;Direction&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;), col(&quot;Channel&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Configuration&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;Issue&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Group&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32)]</text>
</g>
<!-- p4&#45;&#45;p5 -->
<g id="edge5" class="edge">
<title>p4--p5</title>
<path fill="none" stroke="black" d="M8445,-304.7C8445,-293.85 8445,-279.92 8445,-269.1"/>
</g>
<!-- p6 -->
<g id="node7" class="node">
<title>p6</title>
<polygon fill="none" stroke="black" points="8480.5,-197 8409.5,-197 8409.5,-161 8480.5,-161 8480.5,-197"/>
<text text-anchor="middle" x="8445" y="-175.3" font-family="Times,serif" font-size="14.00">π 12/12</text>
</g>
<!-- p5&#45;&#45;p6 -->
<g id="edge6" class="edge">
<title>p5--p6</title>
<path fill="none" stroke="black" d="M8445,-232.7C8445,-221.85 8445,-207.92 8445,-197.1"/>
</g>
<!-- p7 -->
<g id="node8" class="node">
<title>p7</title>
<polygon fill="none" stroke="black" points="8487,-125 8403,-125 8403,-89 8487,-89 8487,-125"/>
<text text-anchor="middle" x="8445" y="-103.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p6&#45;&#45;p7 -->
<g id="edge7" class="edge">
<title>p6--p7</title>
<path fill="none" stroke="black" d="M8445,-160.7C8445,-149.85 8445,-135.92 8445,-125.1"/>
</g>
<!-- p8 -->
<g id="node9" class="node">
<title>p8</title>
<polygon fill="none" stroke="black" points="8600.5,-53 8289.5,-53 8289.5,0 8600.5,0 8600.5,-53"/>
<text text-anchor="middle" x="8445" y="-37.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="8445" y="-22.8" font-family="Times,serif" font-size="14.00">π 12/27;</text>
<text text-anchor="middle" x="8445" y="-7.8" font-family="Times,serif" font-size="14.00">σ col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p7&#45;&#45;p8 -->
<g id="edge8" class="edge">
<title>p7--p8</title>
<path fill="none" stroke="black" d="M8445,-88.97C8445,-78.51 8445,-64.9 8445,-53.16"/>
</g>
<!-- p10 -->
<g id="node11" class="node">
<title>p10</title>
<polygon fill="none" stroke="black" points="5496,-737 5320,-737 5320,-684 5496,-684 5496,-737"/>
<text text-anchor="middle" x="5408" y="-721.8" font-family="Times,serif" font-size="14.00">JOIN INNER</text>
<text text-anchor="middle" x="5408" y="-706.8" font-family="Times,serif" font-size="14.00">left: [col(&quot;ModelID&quot;)];</text>
<text text-anchor="middle" x="5408" y="-691.8" font-family="Times,serif" font-size="14.00">right: [col(&quot;ModelID&quot;)]</text>
</g>
<!-- p9&#45;&#45;p10 -->
<g id="edge10" class="edge">
<title>p9--p10</title>
<path fill="none" stroke="black" d="M5392.34,-772.97C5395.01,-762.51 5398.47,-748.9 5401.46,-737.16"/>
</g>
<!-- p11 -->
<g id="node12" class="node">
<title>p11</title>
<polygon fill="none" stroke="black" points="9433,-648 5813,-648 5813,-612 9433,-612 9433,-648"/>
<text text-anchor="middle" x="7623" y="-626.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;BinPositives&quot;)) / (col(&quot;BinResponseCount&quot;))].alias(&quot;BinPropensity&quot;), [([(col(&quot;BinPositives&quot;)) + (0.5)]) / ([(col(&quot;BinResponseCount&quot;)) + (1.0)])].alias(&quot;BinAdjustedPropensity&quot;), when([(col(&quot;__POLARS_CSER_0x3f3ecce13fbc0b01&quot;).list.length()) &gt; (1)]).then(col(&quot;__POLARS_CSER_0x3f3ecce13fbc0b01&quot;).list.get([dyn int: 0])).otherwise(String(Primary)).alias(&quot;PredictorCategory&quot;), col(&quot;PredictorName&quot;).strict_cast(String).str.split([String(.)]).alias(&quot;__POLARS_CSER_0x3f3ecce13fbc0b01&quot;)]</text>
</g>
<!-- p10&#45;&#45;p11 -->
<g id="edge11" class="edge">
<title>p10--p11</title>
<path fill="none" stroke="black" d="M5496.2,-706.37C5767.45,-696.76 6603.58,-667.13 7143.09,-648.01"/>
</g>
<!-- p15 -->
<g id="node16" class="node">
<title>p15</title>
<polygon fill="none" stroke="black" points="5214,-648 5160,-648 5160,-612 5214,-612 5214,-648"/>
<text text-anchor="middle" x="5187" y="-626.3" font-family="Times,serif" font-size="14.00">π 1/1</text>
</g>
<!-- p10&#45;&#45;p15 -->
<g id="edge15" class="edge">
<title>p10--p15</title>
<path fill="none" stroke="black" d="M5335.94,-683.9C5294.25,-669.1 5244.21,-651.32 5214.05,-640.61"/>
</g>
<!-- p12 -->
<g id="node13" class="node">
<title>p12</title>
<polygon fill="none" stroke="black" points="10927,-575 5041,-575 5041,-539 10927,-539 10927,-575"/>
<text text-anchor="middle" x="7984" y="-553.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;BinIndex&quot;).strict_cast(UInt16), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;), col(&quot;BinResponseCount&quot;).strict_cast(Float32), col(&quot;BinNegatives&quot;).strict_cast(Float32), col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;GroupIndex&quot;).strict_cast(UInt32), col(&quot;BinType&quot;).strict_cast(Categorical(None, Physical)), col(&quot;PredictorName&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;Type&quot;).strict_cast(Categorical(None, Physical)), col(&quot;EntryType&quot;).strict_cast(Categorical(None, Physical)), col(&quot;BinPositives&quot;).strict_cast(Float32)]</text>
</g>
<!-- p11&#45;&#45;p12 -->
<g id="edge12" class="edge">
<title>p11--p12</title>
<path fill="none" stroke="black" d="M7709.47,-611.99C7766.31,-600.81 7840.41,-586.24 7897.3,-575.05"/>
</g>
<!-- p13 -->
<g id="node14" class="node">
<title>p13</title>
<polygon fill="none" stroke="black" points="8026,-502 7942,-502 7942,-466 8026,-466 8026,-502"/>
<text text-anchor="middle" x="7984" y="-480.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p12&#45;&#45;p13 -->
<g id="edge13" class="edge">
<title>p12--p13</title>
<path fill="none" stroke="black" d="M7984,-538.81C7984,-527.65 7984,-513.16 7984,-502.03"/>
</g>
<!-- p14 -->
<g id="node15" class="node">
<title>p14</title>
<polygon fill="none" stroke="black" points="8021.5,-430 7946.5,-430 7946.5,-377 8021.5,-377 8021.5,-430"/>
<text text-anchor="middle" x="7984" y="-414.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="7984" y="-399.8" font-family="Times,serif" font-size="14.00">π 16/36;</text>
<text text-anchor="middle" x="7984" y="-384.8" font-family="Times,serif" font-size="14.00">σ None</text>
</g>
<!-- p13&#45;&#45;p14 -->
<g id="edge14" class="edge">
<title>p13--p14</title>
<path fill="none" stroke="black" d="M7984,-465.97C7984,-455.51 7984,-441.9 7984,-430.16"/>
</g>
<!-- p16 -->
<g id="node17" class="node">
<title>p16</title>
<polygon fill="none" stroke="black" points="5022.5,-576 4909.5,-576 4909.5,-538 5022.5,-538 5022.5,-576"/>
<text text-anchor="middle" x="4966" y="-560.8" font-family="Times,serif" font-size="14.00">simple π 1/15</text>
<text text-anchor="middle" x="4966" y="-545.8" font-family="Times,serif" font-size="14.00">[&quot;ModelID&quot;]</text>
</g>
<!-- p15&#45;&#45;p16 -->
<g id="edge16" class="edge">
<title>p15--p16</title>
<path fill="none" stroke="black" d="M5159.9,-620.29C5125.78,-609.33 5066.31,-590.23 5022.2,-576.05"/>
</g>
<!-- p16&#45;&#45;c0 -->
<g id="edge17" class="edge">
<title>p16--c0</title>
<path fill="none" stroke="black" d="M4955.18,-537.72C4948.67,-526.7 4940.43,-512.78 4934.06,-502"/>
</g>
<!-- p18 -->
<g id="node19" class="node">
<title>p18</title>
<polygon fill="none" stroke="black" points="5618,-341 0,-341 0,-305 5618,-305 5618,-341"/>
<text text-anchor="middle" x="2809" y="-319.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [when([(col(&quot;__POLARS_CSER_0x36c299bdc8534abf&quot;).is_not_nan()) | (col(&quot;__POLARS_CSER_0x36c299bdc8534abf&quot;).is_null())]).then(col(&quot;__POLARS_CSER_0x36c299bdc8534abf&quot;)).otherwise(0.0).alias(&quot;SuccessRate&quot;), when([(col(&quot;Positives&quot;).min()) == (col(&quot;Positives&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;Positives&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_Positives&quot;), when([(col(&quot;ResponseCount&quot;).min()) == (col(&quot;ResponseCount&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;ResponseCount&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_ResponseCount&quot;), [(col(&quot;Positives&quot;)) / (col(&quot;ResponseCount&quot;))].alias(&quot;__POLARS_CSER_0x36c299bdc8534abf&quot;)]</text>
</g>
<!-- p17&#45;&#45;p18 -->
<g id="edge19" class="edge">
<title>p17--p18</title>
<path fill="none" stroke="black" d="M3361.03,-385.47C3242.77,-372.3 3079.85,-354.16 2961.68,-341"/>
</g>
<!-- p19 -->
<g id="node20" class="node">
<title>p19</title>
<polygon fill="none" stroke="black" points="5214,-269 404,-269 404,-233 5214,-233 5214,-269"/>
<text text-anchor="middle" x="2809" y="-247.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;Direction&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;), col(&quot;Channel&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Configuration&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;Issue&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Group&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32)]</text>
</g>
<!-- p18&#45;&#45;p19 -->
<g id="edge20" class="edge">
<title>p18--p19</title>
<path fill="none" stroke="black" d="M2809,-304.7C2809,-293.85 2809,-279.92 2809,-269.1"/>
</g>
<!-- p20 -->
<g id="node21" class="node">
<title>p20</title>
<polygon fill="none" stroke="black" points="2844.5,-197 2773.5,-197 2773.5,-161 2844.5,-161 2844.5,-197"/>
<text text-anchor="middle" x="2809" y="-175.3" font-family="Times,serif" font-size="14.00">π 12/12</text>
</g>
<!-- p19&#45;&#45;p20 -->
<g id="edge21" class="edge">
<title>p19--p20</title>
<path fill="none" stroke="black" d="M2809,-232.7C2809,-221.85 2809,-207.92 2809,-197.1"/>
</g>
<!-- p21 -->
<g id="node22" class="node">
<title>p21</title>
<polygon fill="none" stroke="black" points="2851,-125 2767,-125 2767,-89 2851,-89 2851,-125"/>
<text text-anchor="middle" x="2809" y="-103.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p20&#45;&#45;p21 -->
<g id="edge22" class="edge">
<title>p20--p21</title>
<path fill="none" stroke="black" d="M2809,-160.7C2809,-149.85 2809,-135.92 2809,-125.1"/>
</g>
<!-- p22 -->
<g id="node23" class="node">
<title>p22</title>
<polygon fill="none" stroke="black" points="2964.5,-53 2653.5,-53 2653.5,0 2964.5,0 2964.5,-53"/>
<text text-anchor="middle" x="2809" y="-37.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="2809" y="-22.8" font-family="Times,serif" font-size="14.00">π 12/27;</text>
<text text-anchor="middle" x="2809" y="-7.8" font-family="Times,serif" font-size="14.00">σ col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p21&#45;&#45;p22 -->
<g id="edge23" class="edge">
<title>p21--p22</title>
<path fill="none" stroke="black" d="M2809,-88.97C2809,-78.51 2809,-64.9 2809,-53.16"/>
</g>
</g>
</svg>