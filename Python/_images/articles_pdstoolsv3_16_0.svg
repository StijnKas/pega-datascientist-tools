<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="11295pt" height="1128pt" viewBox="0.00 0.00 11294.50 1128.00">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1124)">
<title>polars_query</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1124 11290.5,-1124 11290.5,4 -4,4"/>
<!-- p1 -->
<g id="node1" class="node">
<title>p1</title>
<polygon fill="none" stroke="black" points="5548.5,-1120 5372.5,-1120 5372.5,-1067 5548.5,-1067 5548.5,-1120"/>
<text text-anchor="middle" x="5460.5" y="-1104.8" font-family="Times,serif" font-size="14.00">JOIN INNER</text>
<text text-anchor="middle" x="5460.5" y="-1089.8" font-family="Times,serif" font-size="14.00">left: [col(&quot;ModelID&quot;)];</text>
<text text-anchor="middle" x="5460.5" y="-1074.8" font-family="Times,serif" font-size="14.00">right: [col(&quot;ModelID&quot;)]</text>
</g>
<!-- p2 -->
<g id="node2" class="node">
<title>p2</title>
<polygon fill="none" stroke="black" points="5619,-950.5 4776,-950.5 4776,-914.5 5619,-914.5 5619,-950.5"/>
<text text-anchor="middle" x="5197.5" y="-928.8" font-family="Times,serif" font-size="14.00">FILTER BY [(col(&quot;SnapshotTime&quot;).fill_null_with_strategy()) == (col(&quot;SnapshotTime&quot;).fill_null_with_strategy().max())]</text>
</g>
<!-- p1&#45;&#45;p2 -->
<g id="edge1" class="edge">
<title>p1--p2</title>
<path fill="none" stroke="black" d="M5372.23,-1074.97C5339.23,-1065.57 5302.71,-1051.55 5273.5,-1031 5243.14,-1009.63 5219.1,-972.62 5206.71,-950.86"/>
</g>
<!-- p12 -->
<g id="node13" class="node">
<title>p12</title>
<polygon fill="none" stroke="black" points="6126,-1031 5283,-1031 5283,-995 6126,-995 6126,-1031"/>
<text text-anchor="middle" x="5704.5" y="-1009.3" font-family="Times,serif" font-size="14.00">FILTER BY [(col(&quot;SnapshotTime&quot;).fill_null_with_strategy()) == (col(&quot;SnapshotTime&quot;).fill_null_with_strategy().max())]</text>
</g>
<!-- p1&#45;&#45;p12 -->
<g id="edge12" class="edge">
<title>p1--p12</title>
<path fill="none" stroke="black" d="M5540.06,-1066.9C5576.63,-1055.14 5619.02,-1041.5 5651.6,-1031.02"/>
</g>
<!-- c0 -->
<g id="node3" class="node">
<title>c0</title>
<polygon fill="none" stroke="black" points="5263.5,-722 5131.5,-722 5131.5,-686 5263.5,-686 5263.5,-722"/>
<text text-anchor="middle" x="5197.5" y="-700.3" font-family="Times,serif" font-size="14.00">CACHE: 1 times</text>
</g>
<!-- p2&#45;&#45;c0 -->
<g id="edge2" class="edge">
<title>p2--c0</title>
<path fill="none" stroke="black" d="M5197.5,-914.48C5197.5,-872.5 5197.5,-764.4 5197.5,-722.22"/>
</g>
<!-- p3 -->
<g id="node4" class="node">
<title>p3</title>
<polygon fill="none" stroke="black" points="5382,-650 5013,-650 5013,-612 5382,-612 5382,-650"/>
<text text-anchor="middle" x="5197.5" y="-634.8" font-family="Times,serif" font-size="14.00">simple π 15/15</text>
<text text-anchor="middle" x="5197.5" y="-619.8" font-family="Times,serif" font-size="14.00">[&quot;Performance&quot;, &quot;Positives&quot;, ... 13 other columns]</text>
</g>
<!-- c0&#45;&#45;p3 -->
<g id="edge3" class="edge">
<title>c0--p3</title>
<path fill="none" stroke="black" d="M5197.5,-685.81C5197.5,-674.98 5197.5,-661.01 5197.5,-650.02"/>
</g>
<!-- p22 -->
<g id="node23" class="node">
<title>p22</title>
<polygon fill="none" stroke="black" points="4164,-650 3795,-650 3795,-612 4164,-612 4164,-650"/>
<text text-anchor="middle" x="3979.5" y="-634.8" font-family="Times,serif" font-size="14.00">simple π 15/15</text>
<text text-anchor="middle" x="3979.5" y="-619.8" font-family="Times,serif" font-size="14.00">[&quot;Performance&quot;, &quot;Positives&quot;, ... 13 other columns]</text>
</g>
<!-- c0&#45;&#45;p22 -->
<g id="edge23" class="edge">
<title>c0--p22</title>
<path fill="none" stroke="black" d="M5131.15,-699.13C4949.77,-688.56 4440.78,-658.89 4164.12,-642.76"/>
</g>
<!-- p4 -->
<g id="node5" class="node">
<title>p4</title>
<polygon fill="none" stroke="black" points="6835.5,-576 6457.5,-576 6457.5,-540 6835.5,-540 6835.5,-576"/>
<text text-anchor="middle" x="6646.5" y="-554.3" font-family="Times,serif" font-size="14.00">FILTER BY col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p3&#45;&#45;p4 -->
<g id="edge4" class="edge">
<title>p3--p4</title>
<path fill="none" stroke="black" d="M5382.06,-612.66C5385.23,-612.43 5388.38,-612.21 5391.5,-612 5769.14,-586.52 6211.58,-571.23 6457.38,-564.02"/>
</g>
<!-- p5 -->
<g id="node6" class="node">
<title>p5</title>
<polygon fill="none" stroke="black" points="7246,-496.5 6877,-496.5 6877,-458.5 7246,-458.5 7246,-496.5"/>
<text text-anchor="middle" x="7061.5" y="-481.3" font-family="Times,serif" font-size="14.00">simple π 15/16</text>
<text text-anchor="middle" x="7061.5" y="-466.3" font-family="Times,serif" font-size="14.00">[&quot;Performance&quot;, &quot;Positives&quot;, ... 13 other columns]</text>
</g>
<!-- p4&#45;&#45;p5 -->
<g id="edge5" class="edge">
<title>p4--p5</title>
<path fill="none" stroke="black" d="M6736.55,-539.97C6804.37,-527.14 6897.15,-509.59 6966.22,-496.52"/>
</g>
<!-- p6 -->
<g id="node7" class="node">
<title>p6</title>
<polygon fill="none" stroke="black" points="9964,-415 4991,-415 4991,-379 9964,-379 9964,-415"/>
<text text-anchor="middle" x="7477.5" y="-393.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [when([(col(&quot;__POLARS_CSER_0xb781e21666853ddc&quot;).is_not_nan()) | (col(&quot;__POLARS_CSER_0xb781e21666853ddc&quot;).is_null())]).then(col(&quot;__POLARS_CSER_0xb781e21666853ddc&quot;)).otherwise(0.0).alias(&quot;SuccessRate&quot;), when([(col(&quot;Positives&quot;).min()) == (col(&quot;Positives&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;Positives&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_Positives&quot;), when([(col(&quot;ResponseCount&quot;).min()) == (col(&quot;ResponseCount&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;ResponseCount&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_ResponseCount&quot;)]</text>
</g>
<!-- p5&#45;&#45;p6 -->
<g id="edge6" class="edge">
<title>p5--p6</title>
<path fill="none" stroke="black" d="M7156.94,-458.49C7226.14,-445.43 7319.14,-427.88 7387.14,-415.05"/>
</g>
<!-- p7 -->
<g id="node8" class="node">
<title>p7</title>
<polygon fill="none" stroke="black" points="7883.5,-343 7071.5,-343 7071.5,-307 7883.5,-307 7883.5,-343"/>
<text text-anchor="middle" x="7477.5" y="-321.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;Positives&quot;)) / (col(&quot;ResponseCount&quot;))].alias(&quot;__POLARS_CSER_0xb781e21666853ddc&quot;)]</text>
</g>
<!-- p6&#45;&#45;p7 -->
<g id="edge7" class="edge">
<title>p6--p7</title>
<path fill="none" stroke="black" d="M7477.5,-378.7C7477.5,-367.85 7477.5,-353.92 7477.5,-343.1"/>
</g>
<!-- p8 -->
<g id="node9" class="node">
<title>p8</title>
<polygon fill="none" stroke="black" points="9882.5,-271 5072.5,-271 5072.5,-235 9882.5,-235 9882.5,-271"/>
<text text-anchor="middle" x="7477.5" y="-249.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;Configuration&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Channel&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Issue&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Direction&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;Group&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;)]</text>
</g>
<!-- p7&#45;&#45;p8 -->
<g id="edge8" class="edge">
<title>p7--p8</title>
<path fill="none" stroke="black" d="M7477.5,-306.7C7477.5,-295.85 7477.5,-281.92 7477.5,-271.1"/>
</g>
<!-- p9 -->
<g id="node10" class="node">
<title>p9</title>
<polygon fill="none" stroke="black" points="7662,-199 7293,-199 7293,-161 7662,-161 7662,-199"/>
<text text-anchor="middle" x="7477.5" y="-183.8" font-family="Times,serif" font-size="14.00">simple π 12/12</text>
<text text-anchor="middle" x="7477.5" y="-168.8" font-family="Times,serif" font-size="14.00">[&quot;Performance&quot;, &quot;Positives&quot;, ... 10 other columns]</text>
</g>
<!-- p8&#45;&#45;p9 -->
<g id="edge9" class="edge">
<title>p8--p9</title>
<path fill="none" stroke="black" d="M7477.5,-234.81C7477.5,-223.98 7477.5,-210.01 7477.5,-199.02"/>
</g>
<!-- p10 -->
<g id="node11" class="node">
<title>p10</title>
<polygon fill="none" stroke="black" points="7519.5,-125 7435.5,-125 7435.5,-89 7519.5,-89 7519.5,-125"/>
<text text-anchor="middle" x="7477.5" y="-103.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p9&#45;&#45;p10 -->
<g id="edge10" class="edge">
<title>p9--p10</title>
<path fill="none" stroke="black" d="M7477.5,-160.72C7477.5,-149.7 7477.5,-135.78 7477.5,-125"/>
</g>
<!-- p11 -->
<g id="node12" class="node">
<title>p11</title>
<polygon fill="none" stroke="black" points="7633,-53 7322,-53 7322,0 7633,0 7633,-53"/>
<text text-anchor="middle" x="7477.5" y="-37.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="7477.5" y="-22.8" font-family="Times,serif" font-size="14.00">π 12/27;</text>
<text text-anchor="middle" x="7477.5" y="-7.8" font-family="Times,serif" font-size="14.00">σ col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p10&#45;&#45;p11 -->
<g id="edge11" class="edge">
<title>p10--p11</title>
<path fill="none" stroke="black" d="M7477.5,-88.97C7477.5,-78.51 7477.5,-64.9 7477.5,-53.16"/>
</g>
<!-- p13 -->
<g id="node14" class="node">
<title>p13</title>
<polygon fill="none" stroke="black" points="5812.5,-959 5636.5,-959 5636.5,-906 5812.5,-906 5812.5,-959"/>
<text text-anchor="middle" x="5724.5" y="-943.8" font-family="Times,serif" font-size="14.00">JOIN INNER</text>
<text text-anchor="middle" x="5724.5" y="-928.8" font-family="Times,serif" font-size="14.00">left: [col(&quot;ModelID&quot;)];</text>
<text text-anchor="middle" x="5724.5" y="-913.8" font-family="Times,serif" font-size="14.00">right: [col(&quot;ModelID&quot;)]</text>
</g>
<!-- p12&#45;&#45;p13 -->
<g id="edge13" class="edge">
<title>p12--p13</title>
<path fill="none" stroke="black" d="M5708.84,-994.97C5711.51,-984.51 5714.97,-970.9 5717.96,-959.16"/>
</g>
<!-- p14 -->
<g id="node15" class="node">
<title>p14</title>
<polygon fill="none" stroke="black" points="6854,-870 6485,-870 6485,-832 6854,-832 6854,-870"/>
<text text-anchor="middle" x="6669.5" y="-854.8" font-family="Times,serif" font-size="14.00">simple π 19/20</text>
<text text-anchor="middle" x="6669.5" y="-839.8" font-family="Times,serif" font-size="14.00">[&quot;Performance&quot;, &quot;Positives&quot;, ... 17 other columns]</text>
</g>
<!-- p13&#45;&#45;p14 -->
<g id="edge14" class="edge">
<title>p13--p14</title>
<path fill="none" stroke="black" d="M5812.55,-924.09C5965.25,-911.25 6282.21,-884.58 6484.92,-867.53"/>
</g>
<!-- p20 -->
<g id="node21" class="node">
<title>p20</title>
<polygon fill="none" stroke="black" points="5468.5,-869 5414.5,-869 5414.5,-833 5468.5,-833 5468.5,-869"/>
<text text-anchor="middle" x="5441.5" y="-847.3" font-family="Times,serif" font-size="14.00">π 1/1</text>
</g>
<!-- p13&#45;&#45;p20 -->
<g id="edge20" class="edge">
<title>p13--p20</title>
<path fill="none" stroke="black" d="M5636.12,-906.67C5578.39,-890.45 5506.85,-870.36 5468.61,-859.62"/>
</g>
<!-- p15 -->
<g id="node16" class="node">
<title>p15</title>
<polygon fill="none" stroke="black" points="9036.5,-795 6192.5,-795 6192.5,-759 9036.5,-759 9036.5,-795"/>
<text text-anchor="middle" x="7614.5" y="-773.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;BinPositives&quot;)) / (col(&quot;BinResponseCount&quot;))].alias(&quot;BinPropensity&quot;), [([(col(&quot;BinPositives&quot;)) + (0.5)]) / ([(col(&quot;BinResponseCount&quot;)) + (1.0)])].alias(&quot;BinAdjustedPropensity&quot;), when([(col(&quot;__POLARS_CSER_0x4249efaf99a30def&quot;).list.length()) &gt; (1)]).then(col(&quot;__POLARS_CSER_0x4249efaf99a30def&quot;).list.get([dyn int: 0])).otherwise(String(Primary)).alias(&quot;PredictorCategory&quot;)]</text>
</g>
<!-- p14&#45;&#45;p15 -->
<g id="edge15" class="edge">
<title>p14--p15</title>
<path fill="none" stroke="black" d="M6854.23,-835.93C7008.01,-824.21 7227.48,-807.49 7391.12,-795.02"/>
</g>
<!-- p16 -->
<g id="node17" class="node">
<title>p16</title>
<polygon fill="none" stroke="black" points="8438,-722 7519,-722 7519,-686 8438,-686 8438,-722"/>
<text text-anchor="middle" x="7978.5" y="-700.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;PredictorName&quot;).strict_cast(String).str.split([String(.)]).alias(&quot;__POLARS_CSER_0x4249efaf99a30def&quot;)]</text>
</g>
<!-- p15&#45;&#45;p16 -->
<g id="edge16" class="edge">
<title>p15--p16</title>
<path fill="none" stroke="black" d="M7701.69,-758.99C7759,-747.81 7833.72,-733.24 7891.08,-722.05"/>
</g>
<!-- p17 -->
<g id="node18" class="node">
<title>p17</title>
<polygon fill="none" stroke="black" points="11286.5,-649 5400.5,-649 5400.5,-613 11286.5,-613 11286.5,-649"/>
<text text-anchor="middle" x="8343.5" y="-627.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;BinPositives&quot;).strict_cast(Float32), col(&quot;BinNegatives&quot;).strict_cast(Float32), col(&quot;PredictorName&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Type&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;BinType&quot;).strict_cast(Categorical(None, Physical)), col(&quot;GroupIndex&quot;).strict_cast(UInt32), col(&quot;BinResponseCount&quot;).strict_cast(Float32), col(&quot;BinIndex&quot;).strict_cast(UInt16), col(&quot;EntryType&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;)]</text>
</g>
<!-- p16&#45;&#45;p17 -->
<g id="edge17" class="edge">
<title>p16--p17</title>
<path fill="none" stroke="black" d="M8065.93,-685.99C8123.4,-674.81 8198.32,-660.24 8255.84,-649.05"/>
</g>
<!-- p18 -->
<g id="node19" class="node">
<title>p18</title>
<polygon fill="none" stroke="black" points="8385.5,-576 8301.5,-576 8301.5,-540 8385.5,-540 8385.5,-576"/>
<text text-anchor="middle" x="8343.5" y="-554.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p17&#45;&#45;p18 -->
<g id="edge18" class="edge">
<title>p17--p18</title>
<path fill="none" stroke="black" d="M8343.5,-612.81C8343.5,-601.65 8343.5,-587.16 8343.5,-576.03"/>
</g>
<!-- p19 -->
<g id="node20" class="node">
<title>p19</title>
<polygon fill="none" stroke="black" points="8381,-504 8306,-504 8306,-451 8381,-451 8381,-504"/>
<text text-anchor="middle" x="8343.5" y="-488.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="8343.5" y="-473.8" font-family="Times,serif" font-size="14.00">π 16/36;</text>
<text text-anchor="middle" x="8343.5" y="-458.8" font-family="Times,serif" font-size="14.00">σ None</text>
</g>
<!-- p18&#45;&#45;p19 -->
<g id="edge19" class="edge">
<title>p18--p19</title>
<path fill="none" stroke="black" d="M8343.5,-539.97C8343.5,-529.51 8343.5,-515.9 8343.5,-504.16"/>
</g>
<!-- p21 -->
<g id="node22" class="node">
<title>p21</title>
<polygon fill="none" stroke="black" points="5445,-796 5332,-796 5332,-758 5445,-758 5445,-796"/>
<text text-anchor="middle" x="5388.5" y="-780.8" font-family="Times,serif" font-size="14.00">simple π 1/15</text>
<text text-anchor="middle" x="5388.5" y="-765.8" font-family="Times,serif" font-size="14.00">[&quot;ModelID&quot;]</text>
</g>
<!-- p20&#45;&#45;p21 -->
<g id="edge21" class="edge">
<title>p20--p21</title>
<path fill="none" stroke="black" d="M5428.94,-832.94C5420.8,-821.88 5410.2,-807.48 5401.9,-796.2"/>
</g>
<!-- p21&#45;&#45;c0 -->
<g id="edge22" class="edge">
<title>p21--c0</title>
<path fill="none" stroke="black" d="M5339.81,-757.9C5310.19,-746.89 5272.59,-732.91 5243.47,-722.09"/>
</g>
<!-- p23 -->
<g id="node24" class="node">
<title>p23</title>
<polygon fill="none" stroke="black" points="3315.5,-576 2937.5,-576 2937.5,-540 3315.5,-540 3315.5,-576"/>
<text text-anchor="middle" x="3126.5" y="-554.3" font-family="Times,serif" font-size="14.00">FILTER BY col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p22&#45;&#45;p23 -->
<g id="edge24" class="edge">
<title>p22--p23</title>
<path fill="none" stroke="black" d="M3794.94,-614.64C3653.24,-602.84 3458.31,-586.62 3315.51,-574.73"/>
</g>
<!-- p24 -->
<g id="node25" class="node">
<title>p24</title>
<polygon fill="none" stroke="black" points="2884,-496.5 2515,-496.5 2515,-458.5 2884,-458.5 2884,-496.5"/>
<text text-anchor="middle" x="2699.5" y="-481.3" font-family="Times,serif" font-size="14.00">simple π 15/16</text>
<text text-anchor="middle" x="2699.5" y="-466.3" font-family="Times,serif" font-size="14.00">[&quot;Performance&quot;, &quot;Positives&quot;, ... 13 other columns]</text>
</g>
<!-- p23&#45;&#45;p24 -->
<g id="edge25" class="edge">
<title>p23--p24</title>
<path fill="none" stroke="black" d="M3033.85,-539.97C2964.06,-527.14 2868.6,-509.59 2797.54,-496.52"/>
</g>
<!-- p25 -->
<g id="node26" class="node">
<title>p25</title>
<polygon fill="none" stroke="black" points="4973,-415 0,-415 0,-379 4973,-379 4973,-415"/>
<text text-anchor="middle" x="2486.5" y="-393.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [when([(col(&quot;__POLARS_CSER_0xb781e21666853ddc&quot;).is_not_nan()) | (col(&quot;__POLARS_CSER_0xb781e21666853ddc&quot;).is_null())]).then(col(&quot;__POLARS_CSER_0xb781e21666853ddc&quot;)).otherwise(0.0).alias(&quot;SuccessRate&quot;), when([(col(&quot;Positives&quot;).min()) == (col(&quot;Positives&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;Positives&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_Positives&quot;), when([(col(&quot;ResponseCount&quot;).min()) == (col(&quot;ResponseCount&quot;).max())]).then(col(&quot;SnapshotTime&quot;).max()).otherwise(col(&quot;SnapshotTime&quot;).filter([(col(&quot;ResponseCount&quot;).diff()) != (0.0)]).max()).over([col(&quot;ModelID&quot;)]).alias(&quot;Last_ResponseCount&quot;)]</text>
</g>
<!-- p24&#45;&#45;p25 -->
<g id="edge26" class="edge">
<title>p24--p25</title>
<path fill="none" stroke="black" d="M2650.63,-458.49C2615.26,-445.45 2567.75,-427.94 2532.95,-415.12"/>
</g>
<!-- p26 -->
<g id="node27" class="node">
<title>p26</title>
<polygon fill="none" stroke="black" points="2892.5,-343 2080.5,-343 2080.5,-307 2892.5,-307 2892.5,-343"/>
<text text-anchor="middle" x="2486.5" y="-321.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [[(col(&quot;Positives&quot;)) / (col(&quot;ResponseCount&quot;))].alias(&quot;__POLARS_CSER_0xb781e21666853ddc&quot;)]</text>
</g>
<!-- p25&#45;&#45;p26 -->
<g id="edge27" class="edge">
<title>p25--p26</title>
<path fill="none" stroke="black" d="M2486.5,-378.7C2486.5,-367.85 2486.5,-353.92 2486.5,-343.1"/>
</g>
<!-- p27 -->
<g id="node28" class="node">
<title>p27</title>
<polygon fill="none" stroke="black" points="4891.5,-271 81.5,-271 81.5,-235 4891.5,-235 4891.5,-271"/>
<text text-anchor="middle" x="2486.5" y="-249.3" font-family="Times,serif" font-size="14.00">WITH COLUMNS [col(&quot;Positives&quot;).strict_cast(Float32), col(&quot;Configuration&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Channel&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Issue&quot;).strict_cast(Categorical(None, Physical)), col(&quot;Direction&quot;).strict_cast(Categorical(None, Physical)), col(&quot;ResponseCount&quot;).strict_cast(Float32), col(&quot;Group&quot;).strict_cast(Categorical(None, Physical)), when([(col(&quot;SnapshotTime&quot;).str.slice([dyn int: 4, dyn int: 1])) == (String(-))]).then(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.cast_time_unit()).otherwise(col(&quot;SnapshotTime&quot;).str.strptime([String(raise)]).dt.replace_time_zone([String(raise)]).dt.cast_time_unit()).alias(&quot;SnapshotTime&quot;)]</text>
</g>
<!-- p26&#45;&#45;p27 -->
<g id="edge28" class="edge">
<title>p26--p27</title>
<path fill="none" stroke="black" d="M2486.5,-306.7C2486.5,-295.85 2486.5,-281.92 2486.5,-271.1"/>
</g>
<!-- p28 -->
<g id="node29" class="node">
<title>p28</title>
<polygon fill="none" stroke="black" points="2671,-199 2302,-199 2302,-161 2671,-161 2671,-199"/>
<text text-anchor="middle" x="2486.5" y="-183.8" font-family="Times,serif" font-size="14.00">simple π 12/12</text>
<text text-anchor="middle" x="2486.5" y="-168.8" font-family="Times,serif" font-size="14.00">[&quot;Performance&quot;, &quot;Positives&quot;, ... 10 other columns]</text>
</g>
<!-- p27&#45;&#45;p28 -->
<g id="edge29" class="edge">
<title>p27--p28</title>
<path fill="none" stroke="black" d="M2486.5,-234.81C2486.5,-223.98 2486.5,-210.01 2486.5,-199.02"/>
</g>
<!-- p29 -->
<g id="node30" class="node">
<title>p29</title>
<polygon fill="none" stroke="black" points="2528.5,-125 2444.5,-125 2444.5,-89 2528.5,-89 2528.5,-125"/>
<text text-anchor="middle" x="2486.5" y="-103.3" font-family="Times,serif" font-size="14.00">RENAME</text>
</g>
<!-- p28&#45;&#45;p29 -->
<g id="edge30" class="edge">
<title>p28--p29</title>
<path fill="none" stroke="black" d="M2486.5,-160.72C2486.5,-149.7 2486.5,-135.78 2486.5,-125"/>
</g>
<!-- p30 -->
<g id="node31" class="node">
<title>p30</title>
<polygon fill="none" stroke="black" points="2642,-53 2331,-53 2331,0 2642,0 2642,-53"/>
<text text-anchor="middle" x="2486.5" y="-37.8" font-family="Times,serif" font-size="14.00">TABLE</text>
<text text-anchor="middle" x="2486.5" y="-22.8" font-family="Times,serif" font-size="14.00">π 12/27;</text>
<text text-anchor="middle" x="2486.5" y="-7.8" font-family="Times,serif" font-size="14.00">σ col(&quot;Name&quot;).str.contains([String(Visa)])</text>
</g>
<!-- p29&#45;&#45;p30 -->
<g id="edge31" class="edge">
<title>p29--p30</title>
<path fill="none" stroke="black" d="M2486.5,-88.97C2486.5,-78.51 2486.5,-64.9 2486.5,-53.16"/>
</g>
</g>
</svg>